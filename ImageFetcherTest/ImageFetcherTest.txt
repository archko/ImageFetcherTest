需要解决的问题:
1.解耦合,可以单独地添加使用.
	完成
2.可以下载多种类型的源,http/https/file/content/drawable/assets等.
	完成http/https/file
3.可以方便地设置参数,针对单个请求.
	完成
4.可以全局设置参数,针对所有的请求.
	完成
5.可以限制线程的数量,至少保证不会因为超出系统默认线程池数量而崩溃.
6.可以有不同的ImageView,比如RoundedImageView.
7.可以修改缓存大小(内存与磁盘).
	完成.还有需要修正.目前只有api>11才可用,因为有Fragment.
8.

if (result != null && imageView != null) {  //TODO if load image failed...
    System.out.println("url:post:"+imageView+" drawable:"+imageView.getDrawable());
    if (null==imageView.getDrawable()||imageView.getDrawable() instanceof BitmapDrawable){
        imageView.setImageDrawable(result);
    } else {
        Bitmap bitmap=mImageCache.getCachedBitmap(mKey);
        if (null!=bitmap) {
            imageView.setImageBitmap(bitmap);
        }
    }
}
这个方法有个bug,如果RoundedImageView有了background,则第一次不会显示图片.它imageView.getDrawable()会得到android.graphics.drawable.BitmapDrawable
CircleImageView则是另一个毛病.两个是相反的.

